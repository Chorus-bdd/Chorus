import org.gradle.internal.os.OperatingSystem;

apply plugin: 'java'
apply plugin: 'maven'

group = 'org.chorusbdd'
version = '2.0.2'

description = "chorus-sikulix"
repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }

    //jxgrabree for sikulix
    maven { url "http://mvn.is.inf.uni-due.de:8081/nexus/content/repositories/atunes-dependencies"}
}

dependencies {
    compile group: 'org.chorusbdd', name: 'chorus-stepinvoker', version:'2.0.2'


    // Sikuli makes use of a maven profile based on activation os family to set
    // the 'sekulix.libs variable which determine which libs dependency gets brought in
    // This seems not compatible with gradle - so we have to suppress the
    // libs dependency and handle this here ourselves
    compile ( group: 'com.sikulix', name: 'sikulixapi', version: '1.1.0') {
        exclude group: 'com.sikulix', module: '${sikulix.libs}'
    }

    if (OperatingSystem.current().isWindows()) {
        println 'Setting sikuli libs to Windows'
        compile ( group: 'com.sikulix', name: 'sikulixlibswin', version: '1.1.0')
    } else if ( OperatingSystem.current().isLinux() ) {
        println 'Setting sikuli libs to Linux'
        compile ( group: 'com.sikulix', name: 'sikulixlibslux', version: '1.1.0')
    } else if ( OperatingSystem.current().isMacOsX() ) {
        println 'Setting sikuli libs to Mac'
        compile ( group: 'com.sikulix', name: 'sikulixlibsmac', version: '1.1.0')
    } else {
        throw new Exception('Unknown OS')
    }

    compile group: 'org.python', name: 'jython-standalone', version:'2.7.0'
    testCompile group: 'junit', name: 'junit', version:'4.10'
}
