
plugins {
    id "com.github.hierynomus.license" version "0.16.1" apply false
}

apply plugin: 'java-library-distribution'

allprojects  {
    
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.hierynomus.license'

    repositories {
        mavenLocal()

        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
    
    group = "org.chorusbdd"
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    version = '4.0.0-ALPHA'

    test {
        doFirst {
            jvmArgs = [
                    //Required by selenium for some mocking
                    '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
            ]
        }

        testLogging {
            // Make sure output from
            // standard out or error is shown
            // in Gradle output.
            showStandardStreams = true
            events "failed"
            exceptionFormat "short"
        }
    }

    license {
        include "**/*.java"
    }

    jar {
        manifest {
            attributes(
                'Built-By'              : System.properties['user.name'],
                'Build-Timestamp'       : new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Revision'        : version,
                'Created-By'            : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'             : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'              : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Automatic-Module-Name' : "org.chorusbdd." + project.name.replaceAll("chorus-", "chorus.")
            )
        }
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }
}



/////////////////////////////////////////////////////////////////////////////////////////////////////
// Signing and Publication to Maven Central

configure([
        project(':chorus'),
        project(':chorus-selenium'),
        project(':chorus-spring'),
        project(':chorus-websockets'),
        project(':chorus-sql')]) {

    println "Configuring extension... $project.name"

    // http://central.sonatype.org/pages/gradle.html#releasing-the-deployment-to-the-central-repository
    // Apply the plugin to allow gradle to sign jars for Sonatype Maven central distribution
    // All child projects will be independently signed and released
    apply plugin: 'signing'

    artifacts {
        archives javadocJar, sourcesJar
    }

    publishing {
        repositories {
            maven {
                name = "ossrh"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = findProperty('ossrhUsername')
                    password = findProperty('ossrhPassword')
                }
            }

            // Uncomment this only if your version ends with -SNAPSHOT, you'll get a 400 otherwhise.
            /*
            maven {
                name = "ossrhSnapshot"
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                credentials {
                    username = findProperty('ossrhUsername')
                    password = findProperty('ossrhPassword')
                }
            }*/
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = description
                    packaging = 'jar'
                    // optionally artifactId can be defined here
                    description = mavenDescription
                    url = 'http://www.chorus-bdd.org'

                    scm {
                        connection = 'scm:git:https://github.com/Chorus-bdd/Chorus'
                        developerConnection = 'scm:git:https://github.com/Chorus-bdd/Chorus'
                        url = 'http://github.com/Chorus-bdd/Chorus'
                    }

                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }

                    developers {
                        developer {
                            id = 'nick'
                            name = 'Nick Ebbutt'
                            email = 'admin@chorus-bdd.org'
                        }
                    }
                }
            }
        }
    }

    signing {
        if (signArtifactsForPublication.toBoolean()) {
            sign publishing.publications.mavenJava
        }
    }
}

apply from: 'dependencies.gradle'

///////////////////////////////////////////////////////////////////////////////////////
// Distribution

//The dependencies from this project determine which jars get included in the
//distribution
dependencies {
    afterEvaluate {
        implementation project('chorus')
        implementation project('chorus-spring')
        implementation project('chorus-selenium')
        implementation project('chorus-websockets')
        implementation project('chorus-sql')
    }
}

//distributions {
//    main{
//        baseName = 'chorus'
//    }
//}

